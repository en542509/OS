###############################################################################
# Test loada and stora by comparing top and bottom halves of shared word 
# being stored and loaded by multiple threads
#############
  std
  cpuid r0
  cld
  loadi 0xffff, r6     # init test counter
  loadi flag, r2       # load address of location to be concurrently accessed
  loadi 8, r5          # load bit shift
  mov   r0, r1         # create a BB pattern for each thread, where B is cpuid
  shl   r5, r1         # 
  add   r0, r1         #
loop:                  # perform loop until we run out of time
  dec   r6
  test  r6, r6
  br    continue
  jr end
continue:
  loada r2, r3         # load shared value
  mov   r3, r4         # check to make sure the top and bottom byte are the same
  shr   r5, r4         #
  shl   r5, r3         #
  shr   r5, r3         #
  equ   r3, r4         # perform equal check
  stora r1, r2         # store own BB pattern in shared variable
  br    loop           # loop if all ok
  
 
  std                  # Test failed indicator
  cpuid r0             # perform cpuid to do register dump
end:
.literal 0

flag:
.literal 0
